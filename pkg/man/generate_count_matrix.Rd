% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_generation.R
\name{generate_count_matrix}
\alias{generate_count_matrix}
\title{generate_count_matrix}
\usage{
generate_count_matrix(n, p, K, U, V, ZI = FALSE, prob1 = NULL,
  rate0 = NULL)
}
\arguments{
\item{n}{positive integer, number of observations (nb of rows)}

\item{p}{positive integer, number of variables (nb of columns)}

\item{K}{positive integer, number of latent factors (dimension of
latent subspace)}

\item{U}{matrix of dimension \code{n x K}, representation (coordinates)
of individuals in the latent space of dimension \code{K}.}

\item{V}{matrix of dimension \code{p x K}, contributions (loadings)
of variables to the latent space of dimension \code{K}.}

\item{ZI}{boolean, indicating if the data are zero-inflated, i.e.
contains drop-out events. Default value is FALSE.}

\item{prob1}{vector of length \code{p} of Bernoulli probabilities
for zero-inflation. The probability of drop-out events per variable
(i.e. column in \code{X}) is \code{1 - prob1}. When NULL and if \code{ZI} is
set to TRUE, the \code{rate0} input parameter is used to compute drop-out
probabilities. Default value is NULL.}

\item{rate0}{vector of length \code{p} of rate used to generate
Bernoulli probability for zero-inflation,
i.e. \code{prob1 = 1 - exp(-rate0*meanX^2)} where \code{meanX} is the
column-average Poisson signal used to generate the data matrix
(c.f. details). Default value is NULL. When \code{prob1} input parameter is
given \code{rate0} input parameter is not used.}
}
\value{
list containing the following
\item{X}{data matrix (dim \code{n x p}) of counts}
\item{U}{input parameter matrix (dim \code{n x K}) of factor
coordinates (in observation space).}
\item{V}{input parameter matrix (dim \code{p x K}) of factor loadings
(in variable space).}
\item{n}{number of observations (or rows in X)}
\item{p}{number of variables (or columns in X)}
\item{K}{number of latent factors (dimension of latent subspace)}
\item{ZI}{input parameter boolean}
\item{prob1}{input parameter vector (NULL if unused) or computed vector
if \code{rate0} input parameter is used}
\item{rate0}{input parameter vector (NULL if unused)}
\item{Xnzi}{NULL if \code{ZI} is FALSE, otherwise observation matrix
(dim \code{n x p}) without drop-out events}
\item{ZIind}{NULL if \code{ZI} is FALSE, otherwise matrix (dim \code{n x p})
of drop-out indicators \eqn{[D_{ij}]_{n\times p}}}
}
\description{
Generates a count data matrix \eqn{X} according to a probabilistic factor
model based on the Poisson distribution
with potential drop-out events (zero-inflation).
}
\details{
The generated count data matrix \eqn{X} of dimension \eqn{n \times p} stores
\eqn{n} obaservations (in rows) of \eqn{p} recorded variables (in columns).

The generative process is based on a probabilistic factor model,
i.e. individuals and variables are represented in a latent space of
dimension \eqn{K} by the input matrices \eqn{U} (observation coordinates
of dim \eqn{n \times K}) and \eqn{V} (variable loadings of
dim \eqn{p \times K}) respectively.

Generative process (without zero-inflation):
\deqn{X | U,V ~ Poisson(UV^t)}
i.e. \eqn{X_{ij} | U_i, V_j ~ Poison(\sum_k U_{ik}V_{jk})}

Generative process (with zero-inflation):
\deqn{X_{ij} | D_{ij}, U_i, V_j ~ D_{ij} \times Poison(\sum_k U_{ik}V_{jk})}
where \eqn{D_{ij}} is a Bernoulli indicator for drop-out events:
\deqn{D_{ij} ~ Bernoulli(p_j)}
with \eqn{p_j\in[0,1]}, i.e. \eqn{D_{ij} = 0} in case of a drop-out events.
The \eqn{p_j} probability can be directly supplied in input (\code{prob1}
input parameter) or computed as \eqn{1 - exp(-rate \times m^2)}
where $m$ is the average signal for the corresponding column
i.e. \eqn{\frac{\sum_{i,k} U_{ik}V_{jk}}{n}}. This formulation is adapted
from the drop-out modeling in Pierson and Yau (2015).

Important: the \code{U} and \code{V} input matrices can be generated
with the function \code{\link{generate_factor_matrix}}.

More details regarding data generation can be found in Durif et al. (2017,
Appendix).
}
\examples{
\dontrun{
## generate data
n <- 100
p <- 50
K <- 5
factorU <- generate_factor_matrix(n, K, ngroup=3, average_signal=30,
                                  group_separation=0.8,
                                  distribution="gamma",
                                  shuffle_feature=TRUE)
factorV <- generate_factor_matrix(p, K, ngroup=2, average_signal=30,
                                  group_separation=0.8,
                                  distribution="gamma",
                                  shuffle_feature=TRUE)
U <- factorU$factor_matrix
V <- factorV$factor_matrix
count_data <- generate_count_matrix(n, p, K, U, V)
X <- count_data$X
}

}
\references{
Pierson, E., Yau, C., 2015. ZIFA: Dimensionality reduction for zero-inflated
single-cell gene expression analysis. Genome Biology 16, 241.
https://doi.org/10.1186/s13059-015-0805-z

Durif, G., Modolo, L., Mold, J.E., Lambert-Lacroix, S., Picard, F., 2017.
Probabilistic Count Matrix Factorization for Single Cell Expression Data
Analysis. arXiv:1710.11028 [stat].
}
\author{
Ghislain Durif, \email{gd.dev@libertymail.net}
}
