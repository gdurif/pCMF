% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prefiltering.R
\name{prefilter}
\alias{prefilter}
\title{prefilter}
\usage{
prefilter(X, prop = 0.05, quant_max = 1, presel = FALSE,
  threshold = 0.2)
}
\arguments{
\item{X}{data matrix of dimension \code{nrow x ncol}}

\item{prop}{real [0,1]-value, minimal proportion of non null entries
in kept columns. Default is 0.05. If zero, only columns with ony null
values are dismissed.}

\item{quant_max}{real [0,1]-value, controling the removing of  columns with
extremely high values. In particular, each column whose max value is higher
than the quantile \code{quant_max} computed on the set of max values
across all columns is removed. Default is 1, and no column is dismissed
according to this criterion.}

\item{presel}{boolean, indicating if columns should be filtered out
according to the variance-based heuristics introduced in
Durif et al. (2019). Default is FALSE.}

\item{threshold}{real [0,1]-value, controling the level of pre-selection
according to the variance-based heuristics introduced in
Durif et al. (2019). Only usd if \code{presel=TRUE}. Default is 0.2,
meaning that only columns for which the heuristic is higher than 0.2
are kept (c.f. details).}
}
\value{
a boolean vector of length \code{ncol} indicating which columns
are kept.
}
\description{
Apply pre-filtering to columns of the data matrix \eqn{X} (remove columns
with only null values or too much null values or extremely high values).
Optional pre-selection according to a variance-based heuristic introduced
in Durif et al. (2019).
}
\details{
This function can be used to filter out columns of the data matrix:
\enumerate{
\item{columns with only null values are dismissed.}
\item{columns with less than \code{prop} in proportion of non null
entries are dismissed.}
\item{columns with extremely high values are dismissed accoding to the
following rule:
\verb{
    Xmax <- apply(X, 2, max) ## column-wise max
    Xmax <= quantile(Xmax, probs=quant_max)
}
With \code{quant_max=1}, no column are dismissed.
}
\item{optionally, if \code{presel=TRUE}, columns can removed
according to the following heuristic on variance:
\verb{
    prior_variance <- 1-exp(-apply(X,2,sd)/mean(X[X!=0]))
    prior_variance > threshold
}
This pre-selection step can be useful to save computation time.
}
}
}
\examples{
\dontrun{
#' ## generate data
n <- 100
p <- 500
K <- 20
factorU <- generate_factor_matrix(n, K, ngroup=3,
                                  average_signal=c(250,100,250),
                                  group_separation=0.8,
                                  distribution="exponential",
                                  shuffle_feature=TRUE)
factorV <- generate_factor_matrix(p, K, ngroup=2, average_signal=80,
                                  group_separation=0.8,
                                  distribution="exponential",
                                  shuffle_feature=TRUE,
                                  prop_noise_feature=0.6)
U <- factorU$factor_matrix
V <- factorV$factor_matrix
count_data <- generate_count_matrix(n, p, K, U, V,
                                    ZI=TRUE, prob1=rep(0.3,p))
X <- count_data$X
## pre-filtering
kept_cols <- prefilter(X, prop = 0.05, quant_max = 0.95)
X <- X[,kept_cols]
}

}
\references{
Durif, G., Modolo, L., Mold, J.E., Lambert-Lacroix, S., Picard, F., 2017.
Probabilistic Count Matrix Factorization for Single Cell Expression Data
Analysis. arXiv:1710.11028 [stat].
}
\author{
Ghislain Durif, \email{gd.dev@libertymail.net}
}
